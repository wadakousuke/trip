 <section class="hero is-info">
  <div class="hero-body">
    <div class="container">
      <h1 class="title">
       会員情報詳細
      </h1>
    </div>
  </div>
</section>
<section class="section">
  <div class="container">
    <div class="columns is-centered">
      <div class="column is-12">
        <div class="box-content">
          <table class="table is-bordered is-striped is-narrow is-hoverable is-fullwidth">
           <tbody>
              <tr>
                <th>会員ID</th>
                <th><%= @user.id %></th>
              </tr>
              <tr>
                <th>氏名</th>
                <th><%= @user.first_name %><%= @user.last_name %></th>
              </tr>
              <tr>
                <th>フリガナ</th>
                <th><%= @user.first_name_kana %><%= @user.last_name_kana %></th>
                </tr>
            </tbody>
          </table>
          <div class=" is-flex is-centerd is-vcenterd">
            <% if @user.id == current_user.id && @user.id != 1%>
              <div class="ml-5"><%= link_to "編集する", edit_user_path(@user.id), class:"button is-success"%></div>
              <div class="ml-5"><%= link_to "退会する", confirm_path, class:"button is-danger"%></div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<%= render 'public/posts/index', posts: @posts %>
<section class="container">
  <div class="columns is-mobile is-centered has-text-centered">
    <div class="column is-3 is-centerd">
       <nav class="pagination is-rounded" role="navigation" aria-label="pagination"><%= paginate @posts %></nav>
    </div>
  </div>
  <div class="columns is-mobile is-centered ">
   <div class="column">
      <div id="map">
            <script>
                let map;
                let marker = []; // マーカーを複数表示させたいので、配列化
                let infoWindow = []; // 吹き出しを複数表示させたいので、配列化
                const posts = gon.posts; // コントローラーで定義したインスタンス変数を変数に代入
                function initMap(){
                // 現在位置の特定
                 navigator.geolocation.getCurrentPosition(function (position){
                // LatLngに位置座標を代入
                        LatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                      // mapの初期位置設定
                        map = new google.maps.Map(document.getElementById('map'), {
                      center: LatLng,
                      zoom: 7
                       });
                       // map.setCenterで地図が初期位置に移動
                    map.setCenter(LatLng);
                        // forは繰り返し処理
                        // 変数iを0と定義し、
                        // その後gonで定義したstudios分繰り返し加える処理を行う
                        for (let i = 0; i < posts.length; i++){
                          // studios[i]は変数iのユーザーを取得している
                          marker[i] = new google.maps.Marker({
                            map: map,
                            position: {
                              // DBに保存してある、緯度・経度を呼び出す
                              lat: posts[i].latitude,
                              lng: posts[i].longitude
                            }
                          });
                          // 変数iを変数idに代入
                          let id = posts[i]['id']
                          // infoWindowは吹き出し
                          infoWindow[i] = new google.maps.InfoWindow({
                            // contentで中身を指定
                            // 今回は文字にリンクを貼り付けた形で表示
                            content: `<a href='/posts/${id}'>${posts[i].name}</a>`
                          });
                          // markerがクリックされた時、
                          marker[i].addListener("click", function(){
                            // infoWindowを表示
                            infoWindow[i].open(map, marker[i]);
                          });
                        }
                      });
                    }
            </script>
            <script async defer
                  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLEMAP'] %>&callback=initMap">
            </script>
        </div>
    </div>
  </div>
</section>
